"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Router__factory = void 0;
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
const ethers_1 = require("ethers");
const _abi = [
    {
        inputs: [],
        stateMutability: "nonpayable",
        type: "constructor",
    },
    {
        inputs: [],
        name: "AgentCreated",
        type: "error",
    },
    {
        inputs: [],
        name: "Reentrancy",
        type: "error",
    },
    {
        inputs: [],
        name: "agentImplementation",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
        ],
        name: "agents",
        outputs: [
            {
                internalType: "contract IAgent",
                name: "agent",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
        ],
        name: "calcAgent",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                components: [
                    {
                        internalType: "address",
                        name: "to",
                        type: "address",
                    },
                    {
                        internalType: "bytes",
                        name: "data",
                        type: "bytes",
                    },
                    {
                        components: [
                            {
                                internalType: "address",
                                name: "token",
                                type: "address",
                            },
                            {
                                internalType: "uint256",
                                name: "amountBps",
                                type: "uint256",
                            },
                            {
                                internalType: "uint256",
                                name: "amountOrOffset",
                                type: "uint256",
                            },
                        ],
                        internalType: "struct IParam.Input[]",
                        name: "inputs",
                        type: "tuple[]",
                    },
                    {
                        internalType: "address",
                        name: "approveTo",
                        type: "address",
                    },
                    {
                        internalType: "address",
                        name: "callback",
                        type: "address",
                    },
                ],
                internalType: "struct IParam.Logic[]",
                name: "logics",
                type: "tuple[]",
            },
            {
                internalType: "address[]",
                name: "tokensReturn",
                type: "address[]",
            },
        ],
        name: "execute",
        outputs: [],
        stateMutability: "payable",
        type: "function",
    },
    {
        inputs: [],
        name: "getAgent",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
        ],
        name: "getAgent",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "getUserAgent",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [
            {
                internalType: "address",
                name: "owner",
                type: "address",
            },
        ],
        name: "newAgent",
        outputs: [
            {
                internalType: "address payable",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "newAgent",
        outputs: [
            {
                internalType: "address payable",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "nonpayable",
        type: "function",
    },
    {
        inputs: [],
        name: "user",
        outputs: [
            {
                internalType: "address",
                name: "",
                type: "address",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
const _bytecode = "0x60a060405234801561001057600080fd5b50600180546001600160a01b0319168117905560405161002f9061005d565b604051809103906000f08015801561004b573d6000803e3d6000fd5b506001600160a01b031660805261006a565b61107280610b7f83390190565b608051610aec6100936000396000818161013a0152818161029401526103ae0152610aec6000f3fe6080604052600436106100915760003560e01c8063b20ee0fa11610059578063b20ee0fa1461015c578063ea67780f14610171578063f551eb19146101b2578063fb3551ff146101e2578063fd66091e1461021b57600080fd5b8063092d27001461009657806335095895146100d35780634f8632ba146100f357806356c01ad614610113578063704b0ec414610128575b600080fd5b3480156100a257600080fd5b506100b66100b1366004610577565b610251565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156100df57600080fd5b506100b66100ee366004610577565b61035c565b3480156100ff57600080fd5b506001546100b6906001600160a01b031681565b34801561011f57600080fd5b506100b6610445565b34801561013457600080fd5b506100b67f000000000000000000000000000000000000000000000000000000000000000081565b61016f61016a3660046105e5565b610455565b005b34801561017d57600080fd5b506001546001600160a01b039081166000818152602081815260409182902054825193845290931692820192909252016100ca565b3480156101be57600080fd5b506001546001600160a01b03908116600090815260208190526040902054166100b6565b3480156101ee57600080fd5b506100b66101fd366004610577565b6001600160a01b039081166000908152602081905260409020541690565b34801561022757600080fd5b506100b6610236366004610577565b6000602081905290815260409020546001600160a01b031681565b60008060ff60f81b308460601b6bffffffffffffffffffffffff19166040518060200161027d90610553565b601f1982820381018352601f9091011660408181527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031660208301520160408051601f19818403018152908290526102e09291602001610681565b6040516020818303038152906040528051906020012060405160200161033d94939291906001600160f81b031994909416845260609290921b6bffffffffffffffffffffffff191660018401526015830152603582015260550190565b60408051601f1981840301815291905280516020909101209392505050565b6001600160a01b038181166000908152602081905260408120549091161561039757604051633b2543a360e01b815260040160405180910390fd5b60008260601b6bffffffffffffffffffffffff19167f00000000000000000000000000000000000000000000000000000000000000006040516103d990610553565b6001600160a01b0390911681526020018190604051809103906000f5905080158015610409573d6000803e3d6000fd5b506001600160a01b03938416600090815260208190526040902080546001600160a01b031916948216949094179093555090919050565b919050565b60006104503361035c565b905090565b6001546001600160a01b03166000190161048057600180546001600160a01b03191633179055610499565b60405163558a1e0360e11b815260040160405180910390fd5b6001546001600160a01b0390811660009081526020819052604090205416806104d4576001546104d1906001600160a01b031661035c565b90505b604051635907707d60e11b81526001600160a01b0382169063b20ee0fa9034906105089089908990899089906004016107a7565b6000604051808303818588803b15801561052157600080fd5b505af1158015610535573d6000803e3d6000fd5b5050600180546001600160a01b031916811790555050505050505050565b6101cd806108ea83390190565b80356001600160a01b038116811461044057600080fd5b60006020828403121561058957600080fd5b61059282610560565b9392505050565b60008083601f8401126105ab57600080fd5b50813567ffffffffffffffff8111156105c357600080fd5b6020830191508360208260051b85010111156105de57600080fd5b9250929050565b600080600080604085870312156105fb57600080fd5b843567ffffffffffffffff8082111561061357600080fd5b61061f88838901610599565b9096509450602087013591508082111561063857600080fd5b5061064587828801610599565b95989497509550505050565b6000815160005b818110156106725760208185018101518683015201610658565b50600093019283525090919050565b60006106966106908386610651565b84610651565b949350505050565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b6000808335601e198436030181126106de57600080fd5b830160208101925035905067ffffffffffffffff8111156106fe57600080fd5b6060810236038213156105de57600080fd5b8183526000602080850194508260005b85811015610760576001600160a01b0361073983610560565b16875281830135838801526040808301359088015260609687019690910190600101610720565b509495945050505050565b8183526000602080850194508260005b85811015610760576001600160a01b0361079483610560565b168752958201959082019060010161077b565b60408082528181018590526000906060808401600588901b8501820189855b8a8110156108c657878303605f190184528135368d9003609e190181126107ec57600080fd5b8c0160a06001600160a01b0361080183610560565b168552602080830135601e1984360301811261081c57600080fd5b8301818101903567ffffffffffffffff81111561083857600080fd5b80360382131561084757600080fd5b8383890152610859848901828461069e565b93505050610869898401846106c7565b8784038b89015261087b848284610710565b9350505061088a888401610560565b6001600160a01b03168887015260806108a4848201610560565b6001600160a01b031696019590955294840194939290920191506001016107c6565b505085810360208701526108db81888a61076b565b9a995050505050505050505056fe60a060405234801561001057600080fd5b506040516101cd3803806101cd83398101604081905261002f916100ca565b6001600160a01b038116608081905260408051600481526024810182526020810180516001600160e01b031663204a7f0760e21b179052905160009291610075916100fa565b600060405180830381855af49150503d80600081146100b0576040519150601f19603f3d011682016040523d82523d6000602084013e6100b5565b606091505b50509050806100c357600080fd5b5050610129565b6000602082840312156100dc57600080fd5b81516001600160a01b03811681146100f357600080fd5b9392505050565b6000825160005b8181101561011b5760208186018101518583015201610101565b506000920191825250919050565b608051608c6101416000396000600e0152608c6000f3fe608060405236600a57005b60317f00000000000000000000000000000000000000000000000000000000000000006033565b005b3660008037600080366000845af43d6000803e8080156051573d6000f35b3d6000fdfea2646970667358221220b300c53f0f27d6f69f51d146989995d24959784971fa921fe8c895508f88465464736f6c63430008120033a2646970667358221220696269b7673a8d302f4f26176fe50e743d67fa2c1cdbc0b6a31591465e5f68fc64736f6c6343000812003360a060405234801561001057600080fd5b50336080526080516110216100516000396000818160750152818160ed015281816101480152818161018f01528181610527015261059001526110216000f3fe6080604052600436106100345760003560e01c80638129fc1c14610039578063b20ee0fa14610050578063f887ea4014610063575b600080fd5b34801561004557600080fd5b5061004e6100b3565b005b61004e61005e366004610d75565b61011a565b34801561006f57600080fd5b506100977f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b6000546001600160a01b0316156100dd576040516302ed543d60e51b815260040160405180910390fd5b600080546001600160a01b0319167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316179055565b6000546001600160a01b0316338114610146576040516348f5c3ed60e01b815260040160405180910390fd5b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b0316146101bb57600080546001600160a01b0319167f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03161790555b8360005b818110156105845760008787838181106101db576101db610de1565b90506020028101906101ed9190610df7565b6101fb906020810190610e2f565b9050600088888481811061021157610211610de1565b90506020028101906102239190610df7565b610231906020810190610e53565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920182905250939450369392508c91508b90508681811061027e5761027e610de1565b90506020028101906102909190610df7565b61029e906040810190610e9a565b9150915060008b8b878181106102b6576102b6610de1565b90506020028101906102c89190610df7565b6102d9906080810190606001610e2f565b905060008c8c888181106102ef576102ef610de1565b90506020028101906103019190610df7565b6103129060a0810190608001610e2f565b90506001600160a01b038216610326578591505b600083815b8181101561049057600087878381811061034757610347610de1565b61035d9260206060909202019081019150610e2f565b9050600088888481811061037357610373610de1565b905060600201602001359050600060001982036103ad5789898581811061039c5761039c610de1565b905060600201604001359050610431565b8115806103bb575061271082115b156103d95760405163c6cc5d7f60e01b815260040160405180910390fd5b612710826103e68561071d565b6103f09190610ee3565b6103fa9190610f08565b905060008a8a8681811061041057610410610de1565b905060600201604001359050600019811461042f578b81016024018290525b505b73eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b0384160161045e57809550610482565b876001600160a01b0316836001600160a01b031614610482576104828389836107b9565b83600101935050505061032b565b506001600160a01b038316156104bc57600080546001600160a01b0319166001600160a01b0385161790555b86516000036104dd576104d86001600160a01b03891683610958565b610522565b6040805180820190915260148152734552524f525f524f555445525f4558454355544560601b6020820152610520906001600160a01b038a169089908590610a76565b505b6000547f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161461057157604051634875ede560e11b815260040160405180910390fd5b88600101985050505050505050506101bf565b508280156107145760007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316634f8632ba6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156105ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106109190610f2a565b905060005b8281101561071157600087878381811061063157610631610de1565b90506020020160208101906106469190610e2f565b905073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b03821601610685576106806001600160a01b03841647610958565b610708565b6040516370a0823160e01b81523060048201526000906001600160a01b038316906370a0823190602401602060405180830381865afa1580156106cc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106f09190610f47565b90506107066001600160a01b0383168583610b53565b505b50600101610615565b50505b50505050505050565b600073eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeed196001600160a01b0383160161074b575047919050565b6040516370a0823160e01b81523060048201526001600160a01b038316906370a0823190602401602060405180830381865afa15801561078f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107b39190610f47565b92915050565b604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015282919085169063dd62ed3e90604401602060405180830381865afa158015610808573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061082c9190610f47565b10156109535760405163095ea7b360e01b81526001600160a01b038381166004830152600019602483015284169063095ea7b390604401600060405180830381600087803b15801561087d57600080fd5b505af192505050801561088e575060015b6109535760405163095ea7b360e01b81526001600160a01b0383811660048301526000602483015284169063095ea7b390604401600060405180830381600087803b1580156108dc57600080fd5b505af11580156108f0573d6000803e3d6000fd5b505060405163095ea7b360e01b81526001600160a01b03858116600483015260001960248301528616925063095ea7b39150604401600060405180830381600087803b15801561093f57600080fd5b505af1158015610714573d6000803e3d6000fd5b505050565b804710156109ad5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a20696e73756666696369656e742062616c616e636500000060448201526064015b60405180910390fd5b6000826001600160a01b03168260405160006040518083038185875af1925050503d80600081146109fa576040519150601f19603f3d011682016040523d82523d6000602084013e6109ff565b606091505b50509050806109535760405162461bcd60e51b815260206004820152603a60248201527f416464726573733a20756e61626c6520746f2073656e642076616c75652c207260448201527f6563697069656e74206d6179206861766520726576657274656400000000000060648201526084016109a4565b606082471015610ad75760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016109a4565b600080866001600160a01b03168587604051610af39190610f84565b60006040518083038185875af1925050503d8060008114610b30576040519150601f19603f3d011682016040523d82523d6000602084013e610b35565b606091505b5091509150610b4687838387610ba5565b925050505b949350505050565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610953908490610c1e565b60608315610c14578251600003610c0d576001600160a01b0385163b610c0d5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016109a4565b5081610b4b565b610b4b8383610cf0565b6000610c73826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b0316610d1a9092919063ffffffff16565b8051909150156109535780806020019051810190610c919190610f96565b6109535760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016109a4565b815115610d005781518083602001fd5b8060405162461bcd60e51b81526004016109a49190610fb8565b6060610b4b8484600085610a76565b60008083601f840112610d3b57600080fd5b50813567ffffffffffffffff811115610d5357600080fd5b6020830191508360208260051b8501011115610d6e57600080fd5b9250929050565b60008060008060408587031215610d8b57600080fd5b843567ffffffffffffffff80821115610da357600080fd5b610daf88838901610d29565b90965094506020870135915080821115610dc857600080fd5b50610dd587828801610d29565b95989497509550505050565b634e487b7160e01b600052603260045260246000fd5b60008235609e19833603018112610e0d57600080fd5b9190910192915050565b6001600160a01b0381168114610e2c57600080fd5b50565b600060208284031215610e4157600080fd5b8135610e4c81610e17565b9392505050565b6000808335601e19843603018112610e6a57600080fd5b83018035915067ffffffffffffffff821115610e8557600080fd5b602001915036819003821315610d6e57600080fd5b6000808335601e19843603018112610eb157600080fd5b83018035915067ffffffffffffffff821115610ecc57600080fd5b6020019150606081023603821315610d6e57600080fd5b80820281158282048414176107b357634e487b7160e01b600052601160045260246000fd5b600082610f2557634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215610f3c57600080fd5b8151610e4c81610e17565b600060208284031215610f5957600080fd5b5051919050565b60005b83811015610f7b578181015183820152602001610f63565b50506000910152565b60008251610e0d818460208701610f60565b600060208284031215610fa857600080fd5b81518015158114610e4c57600080fd5b6020815260008251806020840152610fd7816040850160208701610f60565b601f01601f1916919091016040019291505056fea2646970667358221220d3e30b0cb564ac0570eecdc13245fe8bb0bb17ddad53bf7a0530d8a3965b9fc564736f6c63430008120033";
const isSuperArgs = (xs) => xs.length > 1;
class Router__factory extends ethers_1.ContractFactory {
    constructor(...args) {
        if (isSuperArgs(args)) {
            super(...args);
        }
        else {
            super(_abi, _bytecode, args[0]);
        }
    }
    deploy(overrides) {
        return super.deploy(overrides || {});
    }
    getDeployTransaction(overrides) {
        return super.getDeployTransaction(overrides || {});
    }
    attach(address) {
        return super.attach(address);
    }
    connect(signer) {
        return super.connect(signer);
    }
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.Router__factory = Router__factory;
Router__factory.bytecode = _bytecode;
Router__factory.abi = _abi;
//# sourceMappingURL=Router__factory.js.map